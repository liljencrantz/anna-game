

include(
    "\"screen.h\"", "\"scene.h\"", "\"render.h\"", 
    "\"GL/glew.h\"", "\"GL/glu.h\"", "\"SDL/SDL.h\"", "\"linalg.h\""
);

screen
{
    key
    {
	const Int escape (name(SDLK_ESCAPE));
	const Int left (name(SDLK_LEFT));
	const Int right (name(SDLK_RIGHT));
	const Int up (name(SDLK_UP));
	const Int down (name(SDLK_DOWN));
    }

    def Void init(Int width, Int height, Int fullscreen) (name(screen_init));
    def Void checkInput() (name(screen_check_input));
    def Bool keyGet(Int key) (name(screen_key_get));
    def Void destroy() (name(screen_destroy));
    def Void swapBuffers() (name(screen_swap_buffers));
}

render
{
    def Void init() (name(render_init));
}

scene
{

    cStruct Scene (name(scene))
    {

	const Float sceneSize (name(scene_size));
	const Double time;
	const Float renderQuality (name(render_quality));

	var Float cameraX (name("camera.pos[0]"));
	var Float cameraY (name("camera.pos[1]"));
	var Float cameraZ (name("camera.pos[2]"));

	var Float cameraAngle (name("camera.lr_rot"));

	def Void __init__(String name, Int load) (name(scene_init));
	def Void configure(Int tileLevels, Float size) (name(scene_configure));

	def Void saveTerrain() (name(scene_save_terrain));
	def Void render();
	def Void update() (name(scene_update));

	def Float getHeight(Float x, Float y) (name(scene_get_height));
	def Void getSlope(Float x, Float y, MutableList«Float» slope (capacity(2))) (name(scene_get_slope));
    }
}

primitives
{
    cStruct Transform (name(transform))
    {
	def Void __init__() (name(transform_init));
	def Void identity() (name(transform_init));
	def Float __get__(Int idx1, Int idx2) (name(transform_get));
	def Float __set__(Int idx1, Int idx2, Float value) (name(transform_set));	
//	def __mul__(Transform t) (name(transform_mul));
    }

    cStruct Vec (name(vec))
    {
//	def Float __get__(Int idx) (name(vec_get));
//	def Float __set__(Int idx, Float value) (name(vec_set));	
    }

    cStructPointer BallType (name(ball_type))
    {
 
	const Int levels;
	const Int alpha;

//	def Void calc() (name(ball_calc));
//	def Void set(Int x, Int y, Float height, Float red, Float green, Float blue) (name(ball_type_set));
	
	def Void save(String directory, String name) (name(ball_type_save));     
	
    }
    
    def BallType ballTypeLoad(String directory, String name) (name(ball_type_load));
//    def BallType ballTypeCreate(Int level, String name, Int alpha, XXX alloc) (name(ball_type_create));    

    cStruct Ball (name(ball))
    {
	var Float scale;
	const BallType ballType (name(type));
	var Float radius;
	var Int visible;
	
    }  
    
}
